{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","useEffect","console","log","noteService","initialNotes","length","notesToShow","filter","map","find","changedNote","returnedNote","toggleImportanceOf","onSubmit","event","preventDefault","target","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","type","ReactDOM","render","document","getElementById"],"mappings":"0LAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBACzB,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,QCO7BK,EAbM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAIP,qBAAKJ,UAAU,QAAf,SACKI,KCQEC,EAdA,WAOX,OACI,qBAAKC,MAPW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,SACI,sH,gBCXNC,EAAU,aAkBD,EAhBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc9B,EAXA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAS9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCsF9BK,G,MA/FH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAI0BN,mBAAS,MAJnC,mBAIRO,EAJQ,UAMhBC,qBAAU,WACRC,QAAQC,IAAI,UACZC,IAEGnB,MAAK,SAAAoB,GACJV,EAASU,QAEZ,IACHH,QAAQC,IAAI,SAAUT,EAAMY,OAAQ,SAGpC,IA6CMC,EAAcT,EAChBJ,EACCA,EAAMc,QAAO,SAAAxC,GAAI,OAAuB,IAAnBA,EAAKG,aAE/B,OACE,gCACE,uCACA,cAAC,EAAD,CAAcK,QAASwB,IACvB,8BACE,yBAAQ1B,QAAS,WAAOyB,GAAYD,IAApC,kBACQA,EAAU,YAAc,WAGlC,6BACGS,EAAYE,KAAI,SAAAzC,GAAI,OACnB,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBAvCD,SAACqB,GAC1B,IAAMtB,EAAO0B,EAAMgB,MAAK,SAAA1C,GAAI,OAAIA,EAAKsB,KAAOA,KACtCqB,EAAW,2BAAQ3C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDiC,EACUd,EAAIqB,GACX1B,MAAK,SAAA2B,GACJjB,EAASD,EAAMe,KAAI,SAAAzC,GAAI,OAAIA,EAAKsB,KAAOA,EAAKtB,EAAO4C,SAgCvBC,CAAmB7C,EAAKsB,MAF3CtB,EAAKsB,SAKhB,uBAAMwB,SAlEM,SAACC,GACfA,EAAMC,iBACNd,QAAQC,IAAI,iBAAkBY,EAAME,QACpC,IAAMC,EAAa,CACjB7C,QAASuB,EACTuB,MAAM,IAAIC,MAAOC,cACjBlD,UAAWmD,KAAKC,SAAW,IAG7BnB,EACUc,GACPjC,MAAK,SAAA2B,GACJjB,EAASD,EAAM8B,OAAOZ,IACtBf,EAAW,QAqDb,UACE,uBACE4B,MAAO7B,EACP8B,SAlDiB,SAACX,GACxBb,QAAQC,IAAIY,EAAME,OAAOQ,OACzB5B,EAAWkB,EAAME,OAAOQ,UAkDpB,wBAAQE,KAAK,SAAb,qBAEF,cAAC,EAAD,SC5FNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.883f8087.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n    return (\n      <li className='note'>\n        {note.content}\n        <button onClick={toggleImportance}>{label}</button>\n      </li>\n    )\n  }\n\nexport default Note","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    } \n    \n    return (\n        <div className='error'>\n            {message}\n        </div>\n\n    )\n}\n\nexport default Notification","import React from 'react'\n\n\nconst Footer = () => {\n    const footerStyle = {\n        color: 'green', \n        fontStyle: 'italic',\n        fontSize: 16\n    }\n\n    return (\n        <div style={footerStyle}>\n            <em>Note app, inspired by Department of Computer Science, University of Helsinki 2021</em>\n        </div>\n    )\n}\n\nexport default Footer","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\nimport './index.css'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('') \n  const [showAll, setShowAll] = useState(true)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n  \n  useEffect(() => {\n    console.log('effect')\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n  console.log('render', notes.length, 'notes')\n\n\n  const addNote = (event) => {\n    event.preventDefault()\n    console.log('button clicked', event.target)\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n\n\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(note => note.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote ))\n      })\n      // .catch(error => {\n      //   //alert(`The note '${note.content}' was already deleted from server`)\n      //   setErrorMessage(\n      //     `Note '${note.content}' was already removed from server`\n      //   )\n      //   setTimeout(() => {\n      //     setErrorMessage(null)\n      //   }, 5000)\n      //   setNotes(notes.filter(n => n.id !== id))\n      // })\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : (notes.filter(note => note.important === true))\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage}/>\n      <div>\n        <button onClick={() => {setShowAll(!showAll)}}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n          <Note \n            key={note.id} \n            note={note} \n            toggleImportance={() => toggleImportanceOf(note.id)} />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n          value={newNote}\n          onChange={handleNoteChange}  \n        />\n        <button type=\"submit\">save</button>\n      </form>  \n      <Footer />\n    </div>\n  )\n}\n\nexport default App ","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\n//TO START: 'npm run server' and then, in new Terminal window, 'npm start'. Frontend accessed @ localhost:3000.\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\n\n"],"sourceRoot":""}